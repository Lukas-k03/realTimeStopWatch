|finalOutput
reset => reset.IN4
Start_Stop => Start_Stop.IN1
clock => clock.IN1
A[0] << oneDisplayC6:A1.g
A[1] << oneDisplayC6:A1.f
A[2] << oneDisplayC6:A1.e
A[3] << oneDisplayC6:A1.d
A[4] << oneDisplayC6:A1.c
A[5] << oneDisplayC6:A1.b
A[6] << oneDisplayC6:A1.a
B[0] << oneDisplay:B1.g
B[1] << oneDisplay:B1.f
B[2] << oneDisplay:B1.e
B[3] << oneDisplay:B1.d
B[4] << oneDisplay:B1.c
B[5] << oneDisplay:B1.b
B[6] << oneDisplay:B1.a
C[0] << oneDisplay:C1.g
C[1] << oneDisplay:C1.f
C[2] << oneDisplay:C1.e
C[3] << oneDisplay:C1.d
C[4] << oneDisplay:C1.c
C[5] << oneDisplay:C1.b
C[6] << oneDisplay:C1.a
D[0] << oneDisplay:D1.g
D[1] << oneDisplay:D1.f
D[2] << oneDisplay:D1.e
D[3] << oneDisplay:D1.d
D[4] << oneDisplay:D1.c
D[5] << oneDisplay:D1.b
D[6] << oneDisplay:D1.a


|finalOutput|clk_divider:c1
clock => clock.IN1
rst => rst.IN19
clk_in <= DFF0:dff_gen_label[18].dff_inst.data_out


|finalOutput|clk_divider:c1|DFF0:dff_inst0
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[1].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[2].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[3].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[4].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[5].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[6].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[7].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[8].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[9].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[10].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[11].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[12].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[13].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[14].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[15].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[16].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[17].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|clk_divider:c1|DFF0:dff_gen_label[18].dff_inst
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|TFF0:T1
data => q~reg0.ENA
clk => q~reg0.CLK
reset => q~reg0.ACLR
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1
clock => clock.IN1
inc => inc.IN1
reset => reset.IN1
a <= BCDtoSevenSegment:G3.a
b <= BCDtoSevenSegment:G3.b
c <= BCDtoSevenSegment:G3.c
d <= BCDtoSevenSegment:G3.d
e <= BCDtoSevenSegment:G3.e
f <= BCDtoSevenSegment:G3.f
g <= BCDtoSevenSegment:G3.g
ceq9 <= mod10Count:G2.ceq9


|finalOutput|oneDisplay:D1|mod10Count:G2
clock => clock.IN1
inc => inc.IN1
reset => rst.IN1
count[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
ceq9 <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1|mod10Count:G2|fourByDFF1:m101
clock => clock.IN4
cin[0] => cin[0].IN1
cin[1] => cin[1].IN1
cin[2] => cin[2].IN1
cin[3] => cin[3].IN1
reset => reset.IN4
cout[0] <= DFF0:d1.data_out
cout[1] <= DFF0:d2.data_out
cout[2] <= DFF0:d3.data_out
cout[3] <= DFF0:d4.data_out


|finalOutput|oneDisplay:D1|mod10Count:G2|fourByDFF1:m101|DFF0:d1
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1|mod10Count:G2|fourByDFF1:m101|DFF0:d2
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1|mod10Count:G2|fourByDFF1:m101|DFF0:d3
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1|mod10Count:G2|fourByDFF1:m101|DFF0:d4
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1|mod10Count:G2|fourBitRippleCarry:G2
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
inc => inc.IN1
sum[0] <= half_adder:g1.sum
sum[1] <= half_adder:g2.sum
sum[2] <= half_adder:g3.sum
sum[3] <= half_adder:g4.sum
cout <= half_adder:g4.cout


|finalOutput|oneDisplay:D1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g1
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g2
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g3
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g4
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:D1|BCDtoSevenSegment:G3
A => a.IN0
A => f.IN0
B => a.IN0
B => b.IN1
B => d.IN1
B => e.IN0
B => g.IN0
B => a.IN1
B => c.IN0
B => d.IN0
B => f.IN1
C => b.IN0
C => c.IN1
C => f.IN1
C => f.IN0
C => g.IN1
C => a.IN1
C => d.IN1
C => e.IN1
D => a.IN1
D => b.IN1
D => d.IN1
D => e.IN1
D => f.IN1
D => f.IN1
D => g.IN1
D => a.IN1
D => c.IN1
a <= a.DB_MAX_OUTPUT_PORT_TYPE
b <= b.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE
d <= d.DB_MAX_OUTPUT_PORT_TYPE
e <= e.DB_MAX_OUTPUT_PORT_TYPE
f <= f.DB_MAX_OUTPUT_PORT_TYPE
g <= g.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1
clock => clock.IN1
inc => inc.IN1
reset => reset.IN1
a <= BCDtoSevenSegment:G3.a
b <= BCDtoSevenSegment:G3.b
c <= BCDtoSevenSegment:G3.c
d <= BCDtoSevenSegment:G3.d
e <= BCDtoSevenSegment:G3.e
f <= BCDtoSevenSegment:G3.f
g <= BCDtoSevenSegment:G3.g
ceq9 <= mod10Count:G2.ceq9


|finalOutput|oneDisplay:C1|mod10Count:G2
clock => clock.IN1
inc => inc.IN1
reset => rst.IN1
count[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
ceq9 <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1|mod10Count:G2|fourByDFF1:m101
clock => clock.IN4
cin[0] => cin[0].IN1
cin[1] => cin[1].IN1
cin[2] => cin[2].IN1
cin[3] => cin[3].IN1
reset => reset.IN4
cout[0] <= DFF0:d1.data_out
cout[1] <= DFF0:d2.data_out
cout[2] <= DFF0:d3.data_out
cout[3] <= DFF0:d4.data_out


|finalOutput|oneDisplay:C1|mod10Count:G2|fourByDFF1:m101|DFF0:d1
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1|mod10Count:G2|fourByDFF1:m101|DFF0:d2
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1|mod10Count:G2|fourByDFF1:m101|DFF0:d3
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1|mod10Count:G2|fourByDFF1:m101|DFF0:d4
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1|mod10Count:G2|fourBitRippleCarry:G2
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
inc => inc.IN1
sum[0] <= half_adder:g1.sum
sum[1] <= half_adder:g2.sum
sum[2] <= half_adder:g3.sum
sum[3] <= half_adder:g4.sum
cout <= half_adder:g4.cout


|finalOutput|oneDisplay:C1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g1
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g2
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g3
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g4
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:C1|BCDtoSevenSegment:G3
A => a.IN0
A => f.IN0
B => a.IN0
B => b.IN1
B => d.IN1
B => e.IN0
B => g.IN0
B => a.IN1
B => c.IN0
B => d.IN0
B => f.IN1
C => b.IN0
C => c.IN1
C => f.IN1
C => f.IN0
C => g.IN1
C => a.IN1
C => d.IN1
C => e.IN1
D => a.IN1
D => b.IN1
D => d.IN1
D => e.IN1
D => f.IN1
D => f.IN1
D => g.IN1
D => a.IN1
D => c.IN1
a <= a.DB_MAX_OUTPUT_PORT_TYPE
b <= b.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE
d <= d.DB_MAX_OUTPUT_PORT_TYPE
e <= e.DB_MAX_OUTPUT_PORT_TYPE
f <= f.DB_MAX_OUTPUT_PORT_TYPE
g <= g.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1
clock => clock.IN1
inc => inc.IN1
reset => reset.IN1
a <= BCDtoSevenSegment:G3.a
b <= BCDtoSevenSegment:G3.b
c <= BCDtoSevenSegment:G3.c
d <= BCDtoSevenSegment:G3.d
e <= BCDtoSevenSegment:G3.e
f <= BCDtoSevenSegment:G3.f
g <= BCDtoSevenSegment:G3.g
ceq9 <= mod10Count:G2.ceq9


|finalOutput|oneDisplay:B1|mod10Count:G2
clock => clock.IN1
inc => inc.IN1
reset => rst.IN1
count[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
ceq9 <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1|mod10Count:G2|fourByDFF1:m101
clock => clock.IN4
cin[0] => cin[0].IN1
cin[1] => cin[1].IN1
cin[2] => cin[2].IN1
cin[3] => cin[3].IN1
reset => reset.IN4
cout[0] <= DFF0:d1.data_out
cout[1] <= DFF0:d2.data_out
cout[2] <= DFF0:d3.data_out
cout[3] <= DFF0:d4.data_out


|finalOutput|oneDisplay:B1|mod10Count:G2|fourByDFF1:m101|DFF0:d1
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1|mod10Count:G2|fourByDFF1:m101|DFF0:d2
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1|mod10Count:G2|fourByDFF1:m101|DFF0:d3
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1|mod10Count:G2|fourByDFF1:m101|DFF0:d4
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1|mod10Count:G2|fourBitRippleCarry:G2
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
inc => inc.IN1
sum[0] <= half_adder:g1.sum
sum[1] <= half_adder:g2.sum
sum[2] <= half_adder:g3.sum
sum[3] <= half_adder:g4.sum
cout <= half_adder:g4.cout


|finalOutput|oneDisplay:B1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g1
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g2
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g3
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1|mod10Count:G2|fourBitRippleCarry:G2|half_adder:g4
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplay:B1|BCDtoSevenSegment:G3
A => a.IN0
A => f.IN0
B => a.IN0
B => b.IN1
B => d.IN1
B => e.IN0
B => g.IN0
B => a.IN1
B => c.IN0
B => d.IN0
B => f.IN1
C => b.IN0
C => c.IN1
C => f.IN1
C => f.IN0
C => g.IN1
C => a.IN1
C => d.IN1
C => e.IN1
D => a.IN1
D => b.IN1
D => d.IN1
D => e.IN1
D => f.IN1
D => f.IN1
D => g.IN1
D => a.IN1
D => c.IN1
a <= a.DB_MAX_OUTPUT_PORT_TYPE
b <= b.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE
d <= d.DB_MAX_OUTPUT_PORT_TYPE
e <= e.DB_MAX_OUTPUT_PORT_TYPE
f <= f.DB_MAX_OUTPUT_PORT_TYPE
g <= g.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1
clock => clock.IN1
inc => inc.IN1
reset => reset.IN1
a <= BCDtoSevenSegment:G3.a
b <= BCDtoSevenSegment:G3.b
c <= BCDtoSevenSegment:G3.c
d <= BCDtoSevenSegment:G3.d
e <= BCDtoSevenSegment:G3.e
f <= BCDtoSevenSegment:G3.f
g <= BCDtoSevenSegment:G3.g


|finalOutput|oneDisplayC6:A1|mod6Count:G2
clock => clock.IN1
inc => inc.IN1
reset => rst.IN1
count[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourByDFF2:m61
clock => clock.IN4
cin[0] => cin[0].IN1
cin[1] => cin[1].IN1
cin[2] => cin[2].IN1
cin[3] => cin[3].IN1
reset => reset.IN4
cout[0] <= DFF0:d1.data_out
cout[1] <= DFF0:d2.data_out
cout[2] <= DFF0:d3.data_out
cout[3] <= DFF0:d4.data_out


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourByDFF2:m61|DFF0:d1
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourByDFF2:m61|DFF0:d2
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourByDFF2:m61|DFF0:d3
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourByDFF2:m61|DFF0:d4
data_in => data_out.DATAA
clock => data_out~reg0.CLK
reset => data_out.OUTPUTSELECT
data_out <= data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourBitRippleCarry:G2
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
inc => inc.IN1
sum[0] <= half_adder:g1.sum
sum[1] <= half_adder:g2.sum
sum[2] <= half_adder:g3.sum
sum[3] <= half_adder:g4.sum
cout <= half_adder:g4.cout


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourBitRippleCarry:G2|half_adder:g1
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourBitRippleCarry:G2|half_adder:g2
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourBitRippleCarry:G2|half_adder:g3
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1|mod6Count:G2|fourBitRippleCarry:G2|half_adder:g4
x => sum.IN0
x => cout.IN0
y => sum.IN1
y => cout.IN1
sum <= sum.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|finalOutput|oneDisplayC6:A1|BCDtoSevenSegment:G3
A => a.IN0
A => f.IN0
B => a.IN0
B => b.IN1
B => d.IN1
B => e.IN0
B => g.IN0
B => a.IN1
B => c.IN0
B => d.IN0
B => f.IN1
C => b.IN0
C => c.IN1
C => f.IN1
C => f.IN0
C => g.IN1
C => a.IN1
C => d.IN1
C => e.IN1
D => a.IN1
D => b.IN1
D => d.IN1
D => e.IN1
D => f.IN1
D => f.IN1
D => g.IN1
D => a.IN1
D => c.IN1
a <= a.DB_MAX_OUTPUT_PORT_TYPE
b <= b.DB_MAX_OUTPUT_PORT_TYPE
c <= c.DB_MAX_OUTPUT_PORT_TYPE
d <= d.DB_MAX_OUTPUT_PORT_TYPE
e <= e.DB_MAX_OUTPUT_PORT_TYPE
f <= f.DB_MAX_OUTPUT_PORT_TYPE
g <= g.DB_MAX_OUTPUT_PORT_TYPE


